//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataModel", "WebSiteWebPage", "WebSite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.WebSite), "WebPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HtmlReader.Entity.WebPage), true)]
[assembly: EdmRelationshipAttribute("DataModel", "WebSiteLink", "WebSite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.WebSite), "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HtmlReader.Entity.Link), true)]
[assembly: EdmRelationshipAttribute("DataModel", "WebPageLink", "WebPage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.WebPage), "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.Link))]
[assembly: EdmRelationshipAttribute("DataModel", "SourceLinkToSource", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.Source), "LinkToSource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HtmlReader.Entity.LinkToSource), true)]
[assembly: EdmRelationshipAttribute("DataModel", "LinkLinkToSource", "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.Link), "LinkToSource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HtmlReader.Entity.LinkToSource), true)]
[assembly: EdmRelationshipAttribute("DataModel", "ImageSource", "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.Image), "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HtmlReader.Entity.Source))]

#endregion

namespace HtmlReader.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataModelContainer object using the connection string found in the 'DataModelContainer' section of the application configuration file.
        /// </summary>
        public DataModelContainer() : base("name=DataModelContainer", "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(string connectionString) : base(connectionString, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(EntityConnection connection) : base(connection, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebSite> WebSiteSet
        {
            get
            {
                if ((_WebSiteSet == null))
                {
                    _WebSiteSet = base.CreateObjectSet<WebSite>("WebSiteSet");
                }
                return _WebSiteSet;
            }
        }
        private ObjectSet<WebSite> _WebSiteSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebPage> WebPageSet
        {
            get
            {
                if ((_WebPageSet == null))
                {
                    _WebPageSet = base.CreateObjectSet<WebPage>("WebPageSet");
                }
                return _WebPageSet;
            }
        }
        private ObjectSet<WebPage> _WebPageSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Link> LinkSet
        {
            get
            {
                if ((_LinkSet == null))
                {
                    _LinkSet = base.CreateObjectSet<Link>("LinkSet");
                }
                return _LinkSet;
            }
        }
        private ObjectSet<Link> _LinkSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Source> SourceSet
        {
            get
            {
                if ((_SourceSet == null))
                {
                    _SourceSet = base.CreateObjectSet<Source>("SourceSet");
                }
                return _SourceSet;
            }
        }
        private ObjectSet<Source> _SourceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LinkToSource> LinkToSourceSet
        {
            get
            {
                if ((_LinkToSourceSet == null))
                {
                    _LinkToSourceSet = base.CreateObjectSet<LinkToSource>("LinkToSourceSet");
                }
                return _LinkToSourceSet;
            }
        }
        private ObjectSet<LinkToSource> _LinkToSourceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> ImageSet
        {
            get
            {
                if ((_ImageSet == null))
                {
                    _ImageSet = base.CreateObjectSet<Image>("ImageSet");
                }
                return _ImageSet;
            }
        }
        private ObjectSet<Image> _ImageSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebSiteSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebSiteSet(WebSite webSite)
        {
            base.AddObject("WebSiteSet", webSite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebPageSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebPageSet(WebPage webPage)
        {
            base.AddObject("WebPageSet", webPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkSet(Link link)
        {
            base.AddObject("LinkSet", link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SourceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSourceSet(Source source)
        {
            base.AddObject("SourceSet", source);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkToSourceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkToSourceSet(LinkToSource linkToSource)
        {
            base.AddObject("LinkToSourceSet", linkToSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImageSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImageSet(Image image)
        {
            base.AddObject("ImageSet", image);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Image CreateImage(global::System.Int32 id, global::System.Int32 width, global::System.Int32 height, global::System.Int32 type)
        {
            Image image = new Image();
            image.Id = id;
            image.Width = width;
            image.Height = height;
            image.Type = type;
            return image;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value, "Width");
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value, "Height");
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int32 _Height;
        partial void OnHeightChanging(global::System.Int32 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ImageSource", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("DataModel.ImageSource", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("DataModel.ImageSource", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("DataModel.ImageSource", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("DataModel.ImageSource", "Source", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Link object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="webSiteId">Initial value of the WebSiteId property.</param>
        /// <param name="href">Initial value of the Href property.</param>
        /// <param name="hash">Initial value of the Hash property.</param>
        public static Link CreateLink(global::System.Int32 id, global::System.Int32 webSiteId, global::System.String href, global::System.String hash)
        {
            Link link = new Link();
            link.Id = id;
            link.WebSiteId = webSiteId;
            link.Href = href;
            link.Hash = hash;
            return link;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebSiteId
        {
            get
            {
                return _WebSiteId;
            }
            set
            {
                OnWebSiteIdChanging(value);
                ReportPropertyChanging("WebSiteId");
                _WebSiteId = StructuralObject.SetValidValue(value, "WebSiteId");
                ReportPropertyChanged("WebSiteId");
                OnWebSiteIdChanged();
            }
        }
        private global::System.Int32 _WebSiteId;
        partial void OnWebSiteIdChanging(global::System.Int32 value);
        partial void OnWebSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Href
        {
            get
            {
                return _Href;
            }
            set
            {
                OnHrefChanging(value);
                ReportPropertyChanging("Href");
                _Href = StructuralObject.SetValidValue(value, false, "Href");
                ReportPropertyChanged("Href");
                OnHrefChanged();
            }
        }
        private global::System.String _Href;
        partial void OnHrefChanging(global::System.String value);
        partial void OnHrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value, false, "Hash");
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.String _Hash;
        partial void OnHashChanging(global::System.String value);
        partial void OnHashChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WebSiteLink", "WebSite")]
        public WebSite WebSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebSite>("DataModel.WebSiteLink", "WebSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebSite>("DataModel.WebSiteLink", "WebSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebSite> WebSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebSite>("DataModel.WebSiteLink", "WebSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebSite>("DataModel.WebSiteLink", "WebSite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WebPageLink", "WebPage")]
        public WebPage WebPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebPage>("DataModel.WebPageLink", "WebPage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebPage>("DataModel.WebPageLink", "WebPage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebPage> WebPageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebPage>("DataModel.WebPageLink", "WebPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebPage>("DataModel.WebPageLink", "WebPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "LinkLinkToSource", "LinkToSource")]
        public EntityCollection<LinkToSource> LinkToSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkToSource>("DataModel.LinkLinkToSource", "LinkToSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkToSource>("DataModel.LinkLinkToSource", "LinkToSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="LinkToSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LinkToSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LinkToSource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="linkId">Initial value of the LinkId property.</param>
        public static LinkToSource CreateLinkToSource(global::System.Int32 id, global::System.Int32 sourceId, global::System.Int32 linkId)
        {
            LinkToSource linkToSource = new LinkToSource();
            linkToSource.Id = id;
            linkToSource.SourceId = sourceId;
            linkToSource.LinkId = linkId;
            return linkToSource;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkId
        {
            get
            {
                return _LinkId;
            }
            set
            {
                OnLinkIdChanging(value);
                ReportPropertyChanging("LinkId");
                _LinkId = StructuralObject.SetValidValue(value, "LinkId");
                ReportPropertyChanged("LinkId");
                OnLinkIdChanged();
            }
        }
        private global::System.Int32 _LinkId;
        partial void OnLinkIdChanging(global::System.Int32 value);
        partial void OnLinkIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "SourceLinkToSource", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("DataModel.SourceLinkToSource", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("DataModel.SourceLinkToSource", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("DataModel.SourceLinkToSource", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("DataModel.SourceLinkToSource", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "LinkLinkToSource", "Link")]
        public Link Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("DataModel.LinkLinkToSource", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("DataModel.LinkLinkToSource", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> LinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("DataModel.LinkLinkToSource", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("DataModel.LinkLinkToSource", "Link", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Source")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Source : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Source object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Source CreateSource(global::System.Int32 id, global::System.String value, global::System.String status, global::System.String version)
        {
            Source source = new Source();
            source.Id = id;
            source.Value = value;
            source.Status = status;
            source.Version = version;
            return source;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "SourceLinkToSource", "LinkToSource")]
        public EntityCollection<LinkToSource> LinkToSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkToSource>("DataModel.SourceLinkToSource", "LinkToSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkToSource>("DataModel.SourceLinkToSource", "LinkToSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ImageSource", "Image")]
        public Image Image
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("DataModel.ImageSource", "Image").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("DataModel.ImageSource", "Image").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Image> ImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("DataModel.ImageSource", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Image>("DataModel.ImageSource", "Image", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="WebPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebPage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="webSiteId">Initial value of the WebSiteId property.</param>
        public static WebPage CreateWebPage(global::System.Int32 id, global::System.Int32 webSiteId)
        {
            WebPage webPage = new WebPage();
            webPage.Id = id;
            webPage.WebSiteId = webSiteId;
            return webPage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebSiteId
        {
            get
            {
                return _WebSiteId;
            }
            set
            {
                OnWebSiteIdChanging(value);
                ReportPropertyChanging("WebSiteId");
                _WebSiteId = StructuralObject.SetValidValue(value, "WebSiteId");
                ReportPropertyChanged("WebSiteId");
                OnWebSiteIdChanged();
            }
        }
        private global::System.Int32 _WebSiteId;
        partial void OnWebSiteIdChanging(global::System.Int32 value);
        partial void OnWebSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private Nullable<global::System.DateTime> _Version;
        partial void OnVersionChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true, "Content");
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WebSiteWebPage", "WebSite")]
        public WebSite WebSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebSite>("DataModel.WebSiteWebPage", "WebSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebSite>("DataModel.WebSiteWebPage", "WebSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebSite> WebSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebSite>("DataModel.WebSiteWebPage", "WebSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebSite>("DataModel.WebSiteWebPage", "WebSite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WebPageLink", "Link")]
        public Link Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("DataModel.WebPageLink", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("DataModel.WebPageLink", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> LinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("DataModel.WebPageLink", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("DataModel.WebPageLink", "Link", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="WebSite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebSite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebSite object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="domain">Initial value of the Domain property.</param>
        /// <param name="favicon">Initial value of the Favicon property.</param>
        public static WebSite CreateWebSite(global::System.Int32 id, global::System.String domain, global::System.String favicon)
        {
            WebSite webSite = new WebSite();
            webSite.Id = id;
            webSite.Domain = domain;
            webSite.Favicon = favicon;
            return webSite;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Domain
        {
            get
            {
                return _Domain;
            }
            set
            {
                OnDomainChanging(value);
                ReportPropertyChanging("Domain");
                _Domain = StructuralObject.SetValidValue(value, false, "Domain");
                ReportPropertyChanged("Domain");
                OnDomainChanged();
            }
        }
        private global::System.String _Domain;
        partial void OnDomainChanging(global::System.String value);
        partial void OnDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Favicon
        {
            get
            {
                return _Favicon;
            }
            set
            {
                OnFaviconChanging(value);
                ReportPropertyChanging("Favicon");
                _Favicon = StructuralObject.SetValidValue(value, false, "Favicon");
                ReportPropertyChanged("Favicon");
                OnFaviconChanged();
            }
        }
        private global::System.String _Favicon;
        partial void OnFaviconChanging(global::System.String value);
        partial void OnFaviconChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WebSiteWebPage", "WebPage")]
        public EntityCollection<WebPage> WebPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebPage>("DataModel.WebSiteWebPage", "WebPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebPage>("DataModel.WebSiteWebPage", "WebPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WebSiteLink", "Link")]
        public EntityCollection<Link> Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("DataModel.WebSiteLink", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("DataModel.WebSiteLink", "Link", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
